=head2 Package Win32::GUI::Combobox

L<Back to the Packages|guipacks/>

=over

=item *

L<Constructor>

=over

=item *

L<new Win32::GUI::Combobox(PARENT, %OPTIONS)|/new_Win32_GUI_Combobox_PARENT_>

=back

=item *

L<Methods>

=over

=item *

L<Add(STRING, STRING .. STRING)|/Add_STRING_STRING_STRING_>

=item *

L<AddString(STRING)|/AddString_STRING_>

=item *

L<Clear()|/Clear_>

=item *

L<Count()|/Count_>

=item *

L<FindString(STRING, [INDEX])|/FindString_STRING_INDEX_>

=item *

L<FindStringExact(STRING, [INDEX])|/FindStringExact_STRING_INDEX_>

=item *

L<FirstVisibleItem([INDEX])|/FirstVisibleItem_INDEX_>

=item *

L<GetString(INDEX)|/GetString_INDEX_>

=item *

L<InsertItem(STRING, [INDEX])|/InsertItem_STRING_INDEX_>

=item *

L<ItemHeight([HEIGHT])|/ItemHeight_HEIGHT_>

=item *

L<ListIndex()|/ListIndex_>

=item *

L<RemoveItem(INDEX)|/RemoveItem_INDEX_>

=item *

L<Reset()|/Reset_>

=item *

L<Select(INDEX)|/Select_INDEX_>

=item *

L<SelectedItem()|/SelectedItem_>

=back

=item *

L<Events>

=over

=item *

L<Change()|/Change_>

=item *

L<GotFocus()|/GotFocus_>

=item *

L<LostFocus()|/LostFocus_>

=back

=back

=head3 Constructor

=over 4

=for html <A NAME="new_Win32_GUI_Combobox_PARENT_">

=item new Win32::GUI::Combobox(PARENT, %OPTIONS)

Creates a new Combobox object;
can also be called as PARENT->AddCombobox(%OPTIONS).

=for html <P>

=back

=head3 Methods

=over 4

=for html <A NAME="Add_STRING_STRING_STRING_">

=item Add(STRING, STRING .. STRING)

Adds one or more items at the end of the control's list.

=for html <P>

=for html <A NAME="AddString_STRING_">

=item AddString(STRING)

Adds an item at the end of the control's list.

=for html <P>

=for html <A NAME="Clear_">

=item Clear()

See  L<Reset()|/Reset_>.

=for html <P>

=for html <A NAME="Count_">

=item Count()

Returns the number of items in the Combobox.

=for html <P>

=for html <A NAME="FindString_STRING_INDEX_">

=item FindString(STRING, [INDEX])

Searches the Combobox for an item that begins with the specified STRING.
The optional INDEX parameter tells to start the search from the
specified position; if no parameter is given, the whole list is searched.
Returns the zero-based index of the found item or -1 if no matching
item was found.

=for html <P>

=for html <A NAME="FindStringExact_STRING_INDEX_">

=item FindStringExact(STRING, [INDEX])

Searches the Combobox for an item that exactly matches the specified
STRING (case insensitively).
The optional INDEX parameter tells to start the search from the
specified position; if no parameter is given, the whole list is searched.
Returns the zero-based index of the found item or -1 if no matching
item was found.

=for html <P>

=for html <A NAME="FirstVisibleItem_INDEX_">

=item FirstVisibleItem([INDEX])

Gets the zero-based index of the first visible item in the listbox
portion of the Combobox, or sets it to the specified INDEX.

=for html <P>

=for html <A NAME="GetString_INDEX_">

=item GetString(INDEX)

Returns the string at the specified zero-based INDEX in the Combobox.

=for html <P>

=for html <A NAME="InsertItem_STRING_INDEX_">

=item InsertItem(STRING, [INDEX])

Inserts an item at the specified zero-based INDEX in the Combobox,
or adds it at the end if INDEX is not specified.

=for html <P>

=for html <A NAME="ItemHeight_HEIGHT_">

=item ItemHeight([HEIGHT])

Gets or sets the items height in a Combobox.

=for html <P>

=for html <A NAME="ListIndex_">

=item ListIndex()

See  L<SelectedItem()|/SelectedItem_>.

=for html <P>

=for html <A NAME="RemoveItem_INDEX_">

=item RemoveItem(INDEX)

Removes the zero-based INDEX item from the Combobox.

=for html <P>

=for html <A NAME="Reset_">

=item Reset()

Deletes the content of the Combobox.

=for html <P>

=for html <A NAME="Select_INDEX_">

=item Select(INDEX)

Selects the zero-based INDEX item in the Combobox.

=for html <P>

=for html <A NAME="SelectedItem_">

=item SelectedItem()

Returns the zero-based index of the currently selected item, or -1 if
no item is selected.

=for html <P>

=back

=head3 Events

=over 4

=for html <A NAME="Change_">

=item Change()

Sent when the user selects an item from the Combobox

=for html <P>

=for html <A NAME="GotFocus_">

=item GotFocus()

Sent when the control is activated.

=for html <P>

=for html <A NAME="LostFocus_">

=item LostFocus()

Sent when the control is deactivated.

=for html <P>

=back

=cut

=head2 Package Win32::GUI::Checkbox

L<Back to the Packages|guipacks/>

=over

=item *

L<Constructor>

=over

=item *

L<new Win32::GUI::Checkbox(PARENT, %OPTIONS)|/new_Win32_GUI_Checkbox_PARENT_>

=back

=item *

L<Methods>

=over

=item *

L<Checked([VALUE])|/Checked_VALUE_>

=item *

L<GetCheck()|/GetCheck_>

=item *

L<SetCheck([VALUE])|/SetCheck_VALUE_>

=back

=item *

L<Events>

=over

=item *

L<Click()|/Click_>

=item *

L<DblClick()|/DblClick_>

=item *

L<GotFocus()|/GotFocus_>

=item *

L<LostFocus()|/LostFocus_>

=item *

L<MouseDown()|/MouseDown_>

=item *

L<MouseUp()|/MouseUp_>

=back

=back

=head3 Constructor

=over 4

=for html <A NAME="new_Win32_GUI_Checkbox_PARENT_">

=item new Win32::GUI::Checkbox(PARENT, %OPTIONS)

Creates a new Checkbox object;
can also be called as PARENT->AddCheckbox(%OPTIONS).
%OPTIONS are the same of Button (see  L<new Win32::GUI::Button()|Button/new_Win32_GUI_Button_PARENT_> ).

=for html <P>

=back

=head3 Methods

=over 4

=for html <A NAME="Checked_VALUE_">

=item Checked([VALUE])

Gets or sets the check state of the Checkbox; if called without
arguments, returns the current state:

  0 not checked
  1 checked
  2 indeterminate (grayed)

If a VALUE is specified, it can be one of these (eg. 0 to uncheck the
Checkbox, 1 to check it).

=for html <P>

=for html <A NAME="GetCheck_">

=item GetCheck()

Returns the check state of the Checkbox:

  0 not checked
  1 checked
  2 indeterminate (grayed)

=for html <P>

=for html <A NAME="SetCheck_VALUE_">

=item SetCheck([VALUE])

Sets the check state of the Checkbox; for a list of possible values,
see  L<GetCheck()|/GetCheck_>.
If called without arguments, it checks the Checkbox (eg. state = 1).

=for html <P>

=back

=head3 Events

=over 4

=for html <A NAME="Click_">

=item Click()

Sent when the control is selected (eg.
the button pushed, the checkbox checked, etc.).

=for html <P>

=for html <A NAME="DblClick_">

=item DblClick()

Sent when the user double clicks on the control.

=for html <P>

=for html <A NAME="GotFocus_">

=item GotFocus()

Sent when the control is activated.

=for html <P>

=for html <A NAME="LostFocus_">

=item LostFocus()

Sent when the control is deactivated.

=for html <P>

=for html <A NAME="MouseDown_">

=item MouseDown()

Sent when the user down clicks on the control.

=for html <P>

=for html <A NAME="MouseUp_">

=item MouseUp()

Sent when the user releases a down click on the control.

=for html <P>

=back

=cut

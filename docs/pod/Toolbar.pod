=head2 Package Win32::GUI::Toolbar

L<Back to the Packages|guipacks/>

=over

=item *

L<Constructor>

=over

=item *

L<new Win32::GUI::Toolbar(PARENT, %OPTIONS)|/new_Win32_GUI_Toolbar_PARENT_>

=back

=item *

L<Methods>

=over

=item *

L<AddBitmap(BITMAP, NUMBUTTONS)|/AddBitmap_BITMAP_NUMBUTTONS_>

=item *

L<AddButtons(NUMBER, ...)|/AddButtons_NUMBER_>

=item *

L<AddString(STRING)|/AddString_STRING_>

=item *

L<SetBitmapSize([X, Y])|/SetBitmapSize_X_Y_>

=back

=item *

L<Events>

=over

=item *

L<ButtonClick(INDEX)|/ButtonClick_INDEX_>

=back

=back

=head3 Constructor

=over 4

=for html <A NAME="new_Win32_GUI_Toolbar_PARENT_">

=item new Win32::GUI::Toolbar(PARENT, %OPTIONS)

Creates a new Toolbar object;
can also be called as PARENT->AddToolbar(%OPTIONS).
Class specific %OPTIONS are:

  -flat      => 0/1
  -imagelist => IMAGELIST
  -multiline => 0/1
  -nodivider => 0/1

=for html <P>

=back

=head3 Methods

=over 4

=for html <A NAME="AddBitmap_BITMAP_NUMBUTTONS_">

=item AddBitmap(BITMAP, NUMBUTTONS)

[TBD]



=for html <P>

=for html <A NAME="AddButtons_NUMBER_">

=item AddButtons(NUMBER, ...)

[TBD]



=for html <P>

=for html <A NAME="AddString_STRING_">

=item AddString(STRING)

[TBD]



=for html <P>

=for html <A NAME="SetBitmapSize_X_Y_">

=item SetBitmapSize([X, Y])

[TBD]



=for html <P>

=back

=head3 Events

=over 4

=for html <A NAME="ButtonClick_INDEX_">

=item ButtonClick(INDEX)

Sent when the user presses a button of the Toolbar
the INDEX argument identifies the zero-based index of
the pressed button

=for html <P>

=back

=cut
